{"mappings":"gfACAA,EAAA,S,iBAMMC,EAHO,CACXC,KAAMC,SAASC,cAAc,UAExBF,KAGPD,EAAKI,iBAAiB,UAItB,SAA2BC,GACzBA,EAAEC,iBAMF,IAJA,IAAIC,GAASP,EAAKO,MAAMC,MAClBC,GAAQT,EAAKS,KAAKD,MAClBE,GAAUV,EAAKU,OAAOF,MAEpBG,EAAS,EAAGA,GAAYD,EAAQC,GAAW,EACjDC,EAASC,KAAKC,EAAcH,EAAUJ,IACtCA,GAASE,EAWXG,EAASG,SAAQ,SAAAC,GACfA,EACCC,MAAK,SAAAC,G,IAAGP,EAAQO,EAARP,SAAUJ,EAAKW,EAALX,MACjBY,EAAAC,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANf,EAAM,M,IAE9DgB,OAAM,SAAAL,G,IAAGP,EAAQO,EAARP,SAAUJ,EAAKW,EAALX,MAClBY,EAAAC,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANf,EAAM,M,OAZ9DK,EAASa,OAAS,EAClBzB,EAAK0B,O,IAjBN,IAAId,EAAW,GAqChB,SAASE,EAAcH,EAAUJ,GAE/B,IAAMoB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAY,WACTN,EACHI,EAAQ,CAACpB,WAAUJ,UAEnByB,EAAO,CAACrB,WAAUJ,S,GAElBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(\".form\"),\n}\nconst {form} = refs;\n\n\nform.addEventListener('submit', getArrayPromises)\n\n let promises = [];\n\nfunction getArrayPromises (e){\n  e.preventDefault();\n\n  let delay = +form.delay.value;\n  const step = +form.step.value;\n  const amount = +form.amount.value;\n  \n  for(let position=1; position <= amount; position +=1 ) {\n    promises.push(createPromise(position, delay));\n    delay += step;\n    \n  }\n  \n  getPromis (promises);\n  promises.length = 0;\n  form.reset();   \n}\n\n\nfunction getPromis (array){\n  promises.forEach(promise => {\n    promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n  });\n  \n};\n\n\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n      setTimeout (() => {\n     if (shouldResolve){\n      resolve({position, delay});\n    } else\n      reject({position, delay})\n     \n   }, delay);\n   \n  });\n\n     \n}\n  \n\n\n\n\n\n\n\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","form","document","querySelector","addEventListener","e","preventDefault","delay","value","step","amount","position","$ce04d3a99e08e73b$var$promises","push","$ce04d3a99e08e73b$var$createPromise","forEach","promise","then","param","$h6c0i","Notify","success","concat","catch","failure","length","reset","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.e584a8e6.js.map"}